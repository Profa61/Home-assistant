#192.168.0.60
esphome:
  name: uvlagn

esp8266:
  board: esp01_1m

# Enable logging
logger:

# Enable Home Assistant API
api:

ota:
  password: "8fa98cdeb36d7ba1928ea861fc1dc081"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Uvlagn Fallback Hotspot"
    password: "GWgegOl0g9Rh"
    
captive_portal:
web_server:
  port: 80



# Example configuration entry
sensor:
  - platform: dht
    pin: GPIO13
    model: DHT22
    temperature:
      name: "Living room Temperature"
    humidity:
      name: "Living room Humidity"
    update_interval: 30s


fan:

  - platform: speed
    output: pwm_output
    speed_count: 100
    id: speed_fan
    #speed_count: 1: 55
   # speed_count: 2: 200
    name: "скорость обдува"


output:
  - platform: esp8266_pwm
    pin: GPIO12
    id: pwm_output
    frequency: 1.55 Hz
    



# Example configuration entry
switch:
  #- platform: gpio
  #  pin: GPIO12
  #  name: "Скорость обдува"
  #  id: speed_fan

  - platform: gpio
    pin: GPIO15
    name: "Увлажнитель"
    id: uvl_rele
    on_turn_off:
    - fan.turn_off: speed_fan
    - light.turn_off: lighten
    on_turn_on:
      # - fan.turn_on: speed_fan
      # - light.turn_on: lighten
      - if:
          condition:
            binary_sensor.is_off: voda
          then:
            - switch.turn_on: uvl_rele
            - delay: 1s
            - switch.turn_off: uvl_rele
            - fan.turn_off: speed_fan
            - light.turn_off: lighten
            - repeat:
                count: 3
                then:
                  - light.turn_on: lighten
                  - delay: 800ms
                  - light.turn_off: lighten
                  - delay: 800ms


          else:            
            - switch.turn_on: uvl_rele
            - fan.turn_on: speed_fan
            - light.turn_on: lighten          




    
  
binary_sensor:
  - platform: gpio
    pin:
      number: GPIO14
      inverted: true
      mode:
        input: true
        pullup: true
    name: "Вода в увлажнителе"
    id: voda
    on_state:
      then:
        - if:
            condition:
              binary_sensor.is_off: voda

            then:
              - switch.turn_off: uvl_rele
              - fan.turn_off: speed_fan
              - light.turn_off: lighten
              - repeat:
                  count: 10
                    
                  then:
                    - light.turn_on: lighten
                    - delay: 1s
                    - light.turn_off: lighten
                    - delay: 2s
                    #- switch.turn_off: uvl_rele

        # - while:
        #     condition:
        #       binary_sensor.is_off: voda
        #     then:
        #       - light.turn_on: lighten
        #       - delay: 1s
        #       - light.turn_off: lighten


# interval:
#   - interval: 10s
#     then:
#       - component.update: voda
#       #: pwm_output: 
    

# Example configuration entry
light:
  - platform: neopixelbus
    type: GRB
    variant: WS2811
    pin: GPIO0
    num_leds: 24
    color_correct: [90%, 90%, 90%]
    #restore_mode: ALWAYS_ON
    name: "Подсветка увлажнителя"
    id: lighten
    
  

    effects:
      - addressable_rainbow:
          name: Rainbow Effect With Custom Values
          speed: 10
          width: 100
      - random:
          name: "Slow Random Effect"
          transition_length: 30s
          update_interval: 30s
      - random:
          name: "Fast Random Effect"
          transition_length: 4s
          update_interval: 5s
      - strobe:
          name: Water Leak Alarm
          colors:
            - state: True
              brightness: 100%
              red: 0%
              green: 0%
              blue: 100%
              duration: 200ms
            - state: False
              duration: 200ms
            - state: True
              brightness: 100%
              red: 0%
              green: 0%
              blue: 100%
              duration: 200ms
            - state: False
              duration: 400ms
              #####
      - flicker:
      - flicker:
          name: Flicker Effect With Custom Values
          alpha: 95%
          intensity: 1.5%
      - addressable_color_wipe:
      - addressable_color_wipe:
          name: Color Wipe Effect With Custom Values
          colors:
            - red: 100%
              green: 100%
              blue: 100%
              num_leds: 1
            - red: 0%
              green: 0%
              blue: 0%
              num_leds: 1
          add_led_interval: 100ms
          reverse: False
      - addressable_scan:
      - addressable_scan:
          name: Scan Effect With Custom Values
          move_interval: 100ms
          scan_width: 1
      - addressable_twinkle:
      - addressable_twinkle:
          name: Twinkle Effect With Custom Values
          twinkle_probability: 5%
          progress_interval: 4ms
      - addressable_random_twinkle:
      - addressable_random_twinkle:
          name: Random Twinkle Effect With Custom Values
          twinkle_probability: 5%
          progress_interval: 32ms
      - addressable_fireworks:
      - addressable_fireworks:
          name: Fireworks Effect With Custom Values
          update_interval: 32ms
          spark_probability: 10%
          use_random_color: false
          fade_out_rate: 120


 